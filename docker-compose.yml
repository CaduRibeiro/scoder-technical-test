version: "3.8"

services:
  mysql:
    image: mysql:8
    container_name: scoder-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: feedback_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: scoder-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: scoder-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: scoder-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKAJS_NO_PARTITIONER_WARNING: 1

  scoder-api:
    build:
      context: ./scoder-api
    container_name: scoder-api
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - kafka
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASS: password
      DB_NAME: feedback_db
    networks:
      - default

  scoder-web:
    build:
      context: ./scoder-web
    container_name: scoder-web
    ports:
      - "5173:80"
    depends_on:
      - scoder-api

volumes:
  mysql_data:
